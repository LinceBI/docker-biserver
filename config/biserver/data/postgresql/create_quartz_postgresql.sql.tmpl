DROP DATABASE IF EXISTS "%POSTGRES_QUARTZ_DATABASE%";
DROP USER IF EXISTS "%POSTGRES_QUARTZ_USER%";

CREATE USER "%POSTGRES_QUARTZ_USER%" PASSWORD '%POSTGRES_QUARTZ_PASSWORD%';
CREATE DATABASE "%POSTGRES_QUARTZ_DATABASE%" WITH OWNER = "%POSTGRES_QUARTZ_USER%" ENCODING = 'UTF8' TABLESPACE = pg_default;

GRANT ALL PRIVILEGES ON DATABASE "%POSTGRES_QUARTZ_DATABASE%" TO "%POSTGRES_QUARTZ_USER%";

--Begin Connect--
\connect "%POSTGRES_QUARTZ_DATABASE%" "%POSTGRES_USER%"

BEGIN;

DROP TABLE IF EXISTS qrtz5_job_listeners;
DROP TABLE IF EXISTS qrtz5_trigger_listeners;
DROP TABLE IF EXISTS qrtz5_fired_triggers;
DROP TABLE IF EXISTS qrtz5_paused_trigger_grps;
DROP TABLE IF EXISTS qrtz5_scheduler_state;
DROP TABLE IF EXISTS qrtz5_locks;
DROP TABLE IF EXISTS qrtz5_simple_triggers;
DROP TABLE IF EXISTS qrtz5_cron_triggers;
DROP TABLE IF EXISTS qrtz5_blob_triggers;
DROP TABLE IF EXISTS qrtz5_triggers;
DROP TABLE IF EXISTS qrtz5_job_details;
DROP TABLE IF EXISTS qrtz5_calendars;

CREATE TABLE qrtz5_job_details (
	JOB_NAME VARCHAR(200) NOT NULL,
	JOB_GROUP VARCHAR(200) NOT NULL,
	DESCRIPTION VARCHAR(250) NULL,
	JOB_CLASS_NAME VARCHAR(250) NOT NULL, 
	IS_DURABLE BOOL NOT NULL,
	IS_VOLATILE BOOL NOT NULL,
	IS_STATEFUL BOOL NOT NULL,
	REQUESTS_RECOVERY BOOL NOT NULL,
	JOB_DATA BYTEA NULL,
	PRIMARY KEY (JOB_NAME, JOB_GROUP)
);

CREATE TABLE qrtz5_job_listeners (
	JOB_NAME VARCHAR(200) NOT NULL, 
	JOB_GROUP VARCHAR(200) NOT NULL,
	JOB_LISTENER VARCHAR(200) NOT NULL,
	PRIMARY KEY (JOB_NAME, JOB_GROUP, JOB_LISTENER),
	FOREIGN KEY (JOB_NAME, JOB_GROUP)
	REFERENCES qrtz5_JOB_DETAILS(JOB_NAME, JOB_GROUP) 
);

CREATE TABLE qrtz5_triggers (
	TRIGGER_NAME VARCHAR(200) NOT NULL,
	TRIGGER_GROUP VARCHAR(200) NOT NULL,
	JOB_NAME VARCHAR(200) NOT NULL, 
	JOB_GROUP VARCHAR(200) NOT NULL,
	IS_VOLATILE BOOL NOT NULL,
	DESCRIPTION VARCHAR(250) NULL,
	NEXT_FIRE_TIME BIGINT NULL,
	PREV_FIRE_TIME BIGINT NULL,
	PRIORITY INTEGER NULL,
	TRIGGER_STATE VARCHAR(16) NOT NULL,
	TRIGGER_TYPE VARCHAR(8) NOT NULL,
	START_TIME BIGINT NOT NULL,
	END_TIME BIGINT NULL,
	CALENDAR_NAME VARCHAR(200) NULL,
	MISFIRE_INSTR SMALLINT NULL,
	JOB_DATA BYTEA NULL,
	PRIMARY KEY (TRIGGER_NAME, TRIGGER_GROUP),
	FOREIGN KEY (JOB_NAME, JOB_GROUP) 
	REFERENCES qrtz5_JOB_DETAILS(JOB_NAME, JOB_GROUP) 
);

CREATE TABLE qrtz5_simple_triggers (
	TRIGGER_NAME VARCHAR(200) NOT NULL,
	TRIGGER_GROUP VARCHAR(200) NOT NULL,
	REPEAT_COUNT BIGINT NOT NULL,
	REPEAT_INTERVAL BIGINT NOT NULL,
	TIMES_TRIGGERED BIGINT NOT NULL,
	PRIMARY KEY (TRIGGER_NAME, TRIGGER_GROUP),
	FOREIGN KEY (TRIGGER_NAME, TRIGGER_GROUP) 
	REFERENCES qrtz5_TRIGGERS(TRIGGER_NAME, TRIGGER_GROUP)
);

CREATE TABLE qrtz5_cron_triggers (
	TRIGGER_NAME VARCHAR(200) NOT NULL,
	TRIGGER_GROUP VARCHAR(200) NOT NULL,
	CRON_EXPRESSION VARCHAR(120) NOT NULL,
	TIME_ZONE_ID VARCHAR(80),
	PRIMARY KEY (TRIGGER_NAME, TRIGGER_GROUP),
	FOREIGN KEY (TRIGGER_NAME, TRIGGER_GROUP) 
	REFERENCES qrtz5_TRIGGERS(TRIGGER_NAME, TRIGGER_GROUP)
);

CREATE TABLE qrtz5_blob_triggers (
	TRIGGER_NAME VARCHAR(200) NOT NULL,
	TRIGGER_GROUP VARCHAR(200) NOT NULL,
	BLOB_DATA BYTEA NULL,
	PRIMARY KEY (TRIGGER_NAME, TRIGGER_GROUP),
	FOREIGN KEY (TRIGGER_NAME, TRIGGER_GROUP) 
	REFERENCES qrtz5_TRIGGERS(TRIGGER_NAME, TRIGGER_GROUP)
);

CREATE TABLE qrtz5_trigger_listeners (
	TRIGGER_NAME VARCHAR(200) NOT NULL, 
	TRIGGER_GROUP VARCHAR(200) NOT NULL,
	TRIGGER_LISTENER VARCHAR(200) NOT NULL,
	PRIMARY KEY (TRIGGER_NAME, TRIGGER_GROUP, TRIGGER_LISTENER),
	FOREIGN KEY (TRIGGER_NAME, TRIGGER_GROUP) 
	REFERENCES qrtz5_TRIGGERS(TRIGGER_NAME, TRIGGER_GROUP)
);

CREATE TABLE qrtz5_calendars (
	CALENDAR_NAME VARCHAR(200) NOT NULL, 
	CALENDAR BYTEA NOT NULL,
	PRIMARY KEY (CALENDAR_NAME)
);

CREATE TABLE qrtz5_paused_trigger_grps (
	TRIGGER_GROUP VARCHAR(200) NOT NULL, 
	PRIMARY KEY (TRIGGER_GROUP)
);

CREATE TABLE qrtz5_fired_triggers (
	ENTRY_ID VARCHAR(95) NOT NULL,
	TRIGGER_NAME VARCHAR(200) NOT NULL,
	TRIGGER_GROUP VARCHAR(200) NOT NULL,
	IS_VOLATILE BOOL NOT NULL,
	INSTANCE_NAME VARCHAR(200) NOT NULL,
	FIRED_TIME BIGINT NOT NULL,
	PRIORITY INTEGER NOT NULL,
	STATE VARCHAR(16) NOT NULL,
	JOB_NAME VARCHAR(200) NULL,
	JOB_GROUP VARCHAR(200) NULL,
	IS_STATEFUL BOOL NULL,
	REQUESTS_RECOVERY BOOL NULL,
	PRIMARY KEY (ENTRY_ID)
);

CREATE TABLE qrtz5_scheduler_state (
	INSTANCE_NAME VARCHAR(200) NOT NULL,
	LAST_CHECKIN_TIME BIGINT NOT NULL,
	CHECKIN_INTERVAL BIGINT NOT NULL,
	PRIMARY KEY (INSTANCE_NAME)
);

CREATE TABLE qrtz5_locks (
	LOCK_NAME VARCHAR(40) NOT NULL, 
	PRIMARY KEY (LOCK_NAME)
);

INSERT INTO qrtz5_locks VALUES('TRIGGER_ACCESS');
INSERT INTO qrtz5_locks VALUES('JOB_ACCESS');
INSERT INTO qrtz5_locks VALUES('CALENDAR_ACCESS');
INSERT INTO qrtz5_locks VALUES('STATE_ACCESS');
INSERT INTO qrtz5_locks VALUES('MISFIRE_ACCESS');

ALTER TABLE qrtz5_job_listeners OWNER TO "%POSTGRES_QUARTZ_USER%";
ALTER TABLE qrtz5_trigger_listeners OWNER TO "%POSTGRES_QUARTZ_USER%";
ALTER TABLE qrtz5_fired_triggers OWNER TO "%POSTGRES_QUARTZ_USER%";
ALTER TABLE qrtz5_paused_trigger_grps OWNER TO "%POSTGRES_QUARTZ_USER%";
ALTER TABLE qrtz5_scheduler_state OWNER TO "%POSTGRES_QUARTZ_USER%";
ALTER TABLE qrtz5_locks OWNER TO "%POSTGRES_QUARTZ_USER%";
ALTER TABLE qrtz5_simple_triggers OWNER TO "%POSTGRES_QUARTZ_USER%";
ALTER TABLE qrtz5_cron_triggers OWNER TO "%POSTGRES_QUARTZ_USER%";
ALTER TABLE qrtz5_blob_triggers OWNER TO "%POSTGRES_QUARTZ_USER%";
ALTER TABLE qrtz5_triggers OWNER TO "%POSTGRES_QUARTZ_USER%";
ALTER TABLE qrtz5_job_details OWNER TO "%POSTGRES_QUARTZ_USER%";
ALTER TABLE qrtz5_calendars OWNER TO "%POSTGRES_QUARTZ_USER%";

COMMIT;
--End Connect--
