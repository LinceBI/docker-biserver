#!/bin/sh

# *******************************************************************************************
# This program is free software; you can redistribute it and/or modify it under the
# terms of the GNU General Public License, version 2 as published by the Free Software
# Foundation.
#
# You should have received a copy of the GNU General Public License along with this
# program; if not, you can obtain a copy at http://www.gnu.org/licenses/gpl-2.0.html
# or from the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
#
# This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
# without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License for more details.
#
#
# Copyright 2011 - <%= Time.now.year %> Hitachi Vantara. All rights reserved.
# Copyright 2019 - <%= Time.now.year %> Stratebi Business Solutions S.L. All rights reserved.
# *******************************************************************************************

set -eu
export LC_ALL=C

DIR=$(CDPATH='' cd -- "$(dirname -- "${0:?}")" && pwd -P)
cd "${DIR:?}"

# --------------------------------------------------------------------------
# Finds a suitable Java.
#
# Looks in well-known locations to find a suitable Java then sets two
# environment variables for use in other script files. The two environment
# variables are:
#
# * _PENTAHO_JAVA_HOME - absolute path to Java home
# * _PENTAHO_JAVA - absolute path to Java launcher (e.g. java)
#
# The order of the search is as follows:
#
# 1.  Argument #1 - path to Java home.
# 2.  Environment variable PENTAHO_JAVA_HOME - path to Java home.
# 3.  JRE folder at current folder level.
# 4.  Java folder at current folder level.
# 5.  JRE folder one level up.
# 6.  Java folder one level up.
# 7.  JRE folder two levels up.
# 8.  Java folder two levels up.
# 9.  Environment variable JAVA_HOME - path to Java home.
# 10. Environment variable JRE_HOME - path to Java home.
#
# If a suitable Java is found at one of these locations, then
# _PENTAHO_JAVA_HOME is set to that location and _PENTAHO_JAVA is set to the
# absolute path of the Java launcher at that location. If none of these
# locations are suitable, then _PENTAHO_JAVA_HOME is set to empty string and
# _PENTAHO_JAVA is set to "java".
#
# Finally, there is one final optional environment variable: PENTAHO_JAVA.
# If set, this value is used in the construction of _PENTAHO_JAVA. If not
# set, then the value "java" is used.
# --------------------------------------------------------------------------

setPentahoEnv() {
	if [ -n "${PENTAHO_JAVA-}" ]; then
		__LAUNCHER=${PENTAHO_JAVA:?}
	else
		__LAUNCHER=java
	fi

	if [ -n "${1-}" ] && [ -d "${1:?}" ] && [ -x "${1:?}/bin/${__LAUNCHER:?}" ]; then
		printf '%s\n' "DEBUG: Using value (${1:?}) from calling script"
		export _PENTAHO_JAVA_HOME=${1:?}
		export _PENTAHO_JAVA=${_PENTAHO_JAVA_HOME:?}/bin/${__LAUNCHER:?}
	elif [ -n "${PENTAHO_JAVA_HOME-}" ]; then
		printf '%s\n' "DEBUG: Using PENTAHO_JAVA_HOME"
		export _PENTAHO_JAVA_HOME=${PENTAHO_JAVA_HOME:?}
		export _PENTAHO_JAVA=${_PENTAHO_JAVA_HOME:?}/bin/${__LAUNCHER:?}
	elif [ -x "${DIR:?}/jre/bin/${__LAUNCHER:?}" ]; then
		printf '%s\n' "DEBUG: Found JRE at the current folder"
		export _PENTAHO_JAVA_HOME=${DIR:?}/jre
		export _PENTAHO_JAVA=${_PENTAHO_JAVA_HOME:?}/bin/${__LAUNCHER:?}
	elif [ -x "${DIR:?}/java/bin/${__LAUNCHER:?}" ]; then
		printf '%s\n' "DEBUG: Found Java at the current folder"
		export _PENTAHO_JAVA_HOME=${DIR:?}/java
		export _PENTAHO_JAVA=${_PENTAHO_JAVA_HOME:?}/bin/${__LAUNCHER:?}
	elif [ -x "${DIR:?}/../jre/bin/${__LAUNCHER:?}" ]; then
		printf '%s\n' "DEBUG: Found JRE one folder up"
		export _PENTAHO_JAVA_HOME=${DIR:?}/../jre
		export _PENTAHO_JAVA=${_PENTAHO_JAVA_HOME:?}/bin/${__LAUNCHER:?}
	elif [ -x "${DIR:?}/../java/bin/${__LAUNCHER:?}" ]; then
		printf '%s\n' "DEBUG: Found Java one folder up"
		export _PENTAHO_JAVA_HOME=${DIR:?}/../java
		export _PENTAHO_JAVA=${_PENTAHO_JAVA_HOME:?}/bin/${__LAUNCHER:?}
	elif [ -x "${DIR:?}/../../jre/bin/${__LAUNCHER:?}" ]; then
		printf '%s\n' "DEBUG: Found JRE two folders up"
		export _PENTAHO_JAVA_HOME=${DIR:?}/../../jre
		export _PENTAHO_JAVA=${_PENTAHO_JAVA_HOME:?}/bin/${__LAUNCHER:?}
	elif [ -x "${DIR:?}/../../java/bin/${__LAUNCHER:?}" ]; then
		printf '%s\n' "DEBUG: Found Java two folders up"
		export _PENTAHO_JAVA_HOME=${DIR:?}/../../java
		export _PENTAHO_JAVA=${_PENTAHO_JAVA_HOME:?}/bin/${__LAUNCHER:?}
	elif [ -n "${JAVA_HOME-}" ]; then
		printf '%s\n' "DEBUG: Using JAVA_HOME"
		export _PENTAHO_JAVA_HOME=${JAVA_HOME:?}
		export _PENTAHO_JAVA=${_PENTAHO_JAVA_HOME:?}/bin/${__LAUNCHER:?}
	elif [ -n "${JRE_HOME-}" ]; then
		printf '%s\n' "DEBUG: Using JRE_HOME"
		export _PENTAHO_JAVA_HOME=${JRE_HOME:?}
		export _PENTAHO_JAVA=${_PENTAHO_JAVA_HOME:?}/bin/${__LAUNCHER:?}
	else
		printf '%s\n' "WARNING: Using Java from PATH"
		export _PENTAHO_JAVA_HOME=
		export _PENTAHO_JAVA=${__LAUNCHER:?}
	fi

	printf '%s\n' "DEBUG: _PENTAHO_JAVA_HOME=${_PENTAHO_JAVA_HOME?}"
	printf '%s\n' "DEBUG: _PENTAHO_JAVA=${_PENTAHO_JAVA:?}"
}
