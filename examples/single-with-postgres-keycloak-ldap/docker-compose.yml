version: "3.9"

services:

  caddy:
    image: "docker.io/caddy:2"
    restart: "on-failure:3"
    networks:
      - "biserver"
    ports:
      - "80:80/tcp"
      - "443:443/tcp"
    volumes:
      - "./Caddyfile:/etc/caddy/Caddyfile:ro"
      - "caddy-data:/data/"
    environment:
      TLS_DOMAIN: "${TLS_DOMAIN}"
      TLS_ISSUER: "${TLS_ISSUER}"
      TLS_ISSUER_CA: "${TLS_ISSUER_CA}"
      TLS_ISSUER_EMAIL: "${TLS_ISSUER_EMAIL}"

  biserver:
    image: "repo.stratebi.com/lincebi/biserver:9.3.0.0-428"
    restart: "on-failure:3"
    networks:
      biserver:
        aliases: ["${TLS_DOMAIN}"]
    environment:
      IS_PROXIED: "true"
      PROXY_SCHEME: "https"
      PROXY_PORT: "443"
      FQSU_PROTOCOL: "https"
      FQSU_DOMAIN: "${TLS_DOMAIN}"
      FQSU_PORT: "443"
      SECURITY_PROVIDER: "ldap"
      LDAP_CONTEXT_SOURCE_PROVIDER_URL: "ldap://openldap:389"
      LDAP_CONTEXT_SOURCE_USER_DN: "cn=admin,dc=example,dc=localdomain"
      LDAP_CONTEXT_SOURCE_PASSWORD: "${LDAP_ADMIN_PASSWORD}"
      LDAP_ALL_AUTHORITIES_SEARCH_SEARCH_BASE: "ou=groups,dc=example,dc=localdomain"
      LDAP_ALL_AUTHORITIES_SEARCH_SEARCH_FILTER: "(objectClass=groupOfUniqueNames)"
      LDAP_ALL_USERNAMES_SEARCH_SEARCH_BASE: "ou=users,dc=example,dc=localdomain"
      LDAP_ALL_USERNAMES_SEARCH_SEARCH_FILTER: "(objectClass=inetOrgPerson)"
      LDAP_USER_SEARCH_SEARCH_FILTER: "(cn={0})"
      LDAP_POPULATOR_GROUP_SEARCH_FILTER: "(uniqueMember={0})"
      LDAP_ADMIN_ROLE: "cn=Administrator,ou=groups,dc=example,dc=localdomain"
      CAS_ENABLED: "true"
      CAS_URL: "https://sso.${TLS_DOMAIN}/auth/realms/biserver/protocol/cas"
      CAS_TICKETVALIDATOR_URL: "http://keycloak:8080/auth/realms/biserver/protocol/cas"
      CAS_PROVIDER_USERDETAILS: "ldapUserDetailsService"
      STORAGE_TYPE: "postgres"
      POSTGRES_HOST: "postgres"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
      POSTGRES_JACKRABBIT_USER: "${DB_JACKRABBIT_USER}"
      POSTGRES_JACKRABBIT_PASSWORD: "${DB_JACKRABBIT_PASSWORD}"
      POSTGRES_JACKRABBIT_DATABASE: "${DB_JACKRABBIT_DATABASE}"
      POSTGRES_HIBERNATE_USER: "${DB_HIBERNATE_USER}"
      POSTGRES_HIBERNATE_PASSWORD: "${DB_HIBERNATE_PASSWORD}"
      POSTGRES_HIBERNATE_DATABASE: "${DB_HIBERNATE_DATABASE}"
      POSTGRES_QUARTZ_USER: "${DB_QUARTZ_USER}"
      POSTGRES_QUARTZ_PASSWORD: "${DB_QUARTZ_PASSWORD}"
      POSTGRES_QUARTZ_DATABASE: "${DB_QUARTZ_DATABASE}"
    depends_on:
      - "postgres"
      - "openldap"

  keycloak:
    image: "quay.io/keycloak/keycloak:18.0.0"
    restart: "on-failure:3"
    networks:
      - "biserver"
    volumes:
      - "./realm.json:/opt/keycloak/data/import/realm.json:ro"
      - "./keycloak.init.d/:/etc/keycloak.init.d/:ro"
    environment:
      KEYCLOAK_ADMIN: "admin"
      KEYCLOAK_ADMIN_PASSWORD: "${KEYCLOAK_ADMIN_PASSWORD}"
      KC_DB: "postgres"
      KC_DB_URL: "jdbc:postgresql://postgres/${DB_KEYCLOAK_DATABASE}"
      KC_DB_USERNAME: "${DB_KEYCLOAK_USER}"
      KC_DB_PASSWORD: "${DB_KEYCLOAK_PASSWORD}"
      KC_HTTP_ENABLED: "true"
      KC_HTTP_HOST: "0.0.0.0"
      KC_HTTP_PORT: "8080"
      KC_HTTP_RELATIVE_PATH: "/auth"
      KC_HOSTNAME_STRICT: "false"
      KC_HOSTNAME_STRICT_HTTPS: "false"
      KC_PROXY: "edge"
    entrypoint: "/bin/sh"
    command:
      - "-euc"
      - |
        for f in /etc/keycloak.init.d/*.sh; do "$${f:?}"; done
        exec /opt/keycloak/bin/kc.sh start --auto-build --import-realm
    depends_on:
      - "postgres"
      - "openldap"

  openldap:
    image: "docker.io/osixia/openldap:stable"
    restart: "on-failure:3"
    networks:
      - "biserver"
    ports:
      - "389:389/tcp"
      - "636:636/tcp"
    volumes:
      - "./openldap.init.d/:/container/ldif/:ro"
      - "openldap-conf:/etc/ldap/slapd.d/"
      - "openldap-data:/var/lib/ldap/"
    environment:
      LDAP_DOMAIN: "${TLS_DOMAIN}"
      LDAP_BACKEND: "mdb"
      LDAP_TLS: "true"
      LDAP_TLS_ENFORCE: "false"
      LDAP_ADMIN_PASSWORD: "${LDAP_ADMIN_PASSWORD}"
      LDAP_CONFIG_PASSWORD: "${LDAP_CONFIG_PASSWORD}"
    entrypoint: '/bin/sh'
    command:
      - "-euc"
      - |
        mkdir -p /container/service/slapd/assets/config/bootstrap/ldif/custom/
        cp -f /container/ldif/*.ldif /container/service/slapd/assets/config/bootstrap/ldif/custom/
        exec /container/tool/run

  postgres:
    image: "docker.io/postgres:14"
    restart: "on-failure:3"
    networks:
      - "biserver"
    ports:
      - "127.0.0.1:5432:5432/tcp"
    volumes:
      - "./postgres.init.d/:/docker-entrypoint-initdb.d/:ro"
      - "postgres-data:/var/lib/postgresql/data/"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
      POSTGRES_KEYCLOAK_USER: "${DB_KEYCLOAK_USER}"
      POSTGRES_KEYCLOAK_PASSWORD: "${DB_KEYCLOAK_PASSWORD}"
      POSTGRES_KEYCLOAK_DATABASE: "${DB_KEYCLOAK_DATABASE}"

networks:

  biserver:
    driver: "bridge"
    internal: false

volumes:

  caddy-data:
  openldap-data:
  openldap-conf:
  postgres-data:
