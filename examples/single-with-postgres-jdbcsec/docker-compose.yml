version: "3.9"

services:

  caddy:
    image: "docker.io/caddy:2"
    restart: "on-failure:3"
    networks:
      - "biserver"
    ports:
      - "80:80/tcp"
      - "443:443/tcp"
    volumes:
      - "./Caddyfile:/etc/caddy/Caddyfile:ro"
      - "caddy-data:/data/"
    environment:
      TLS_DOMAIN: "${TLS_DOMAIN}"
      TLS_ISSUER: "${TLS_ISSUER}"
      TLS_ISSUER_CA: "${TLS_ISSUER_CA}"
      TLS_ISSUER_EMAIL: "${TLS_ISSUER_EMAIL}"

  biserver:
    image: "repo.stratebi.com/lincebi/biserver:9.4.0.1-465"
    restart: "on-failure:3"
    networks:
      - "biserver"
    environment:
      IS_PROXIED: "true"
      PROXY_SCHEME: "https"
      PROXY_PORT: "443"
      FQSU_PROTOCOL: "https"
      FQSU_DOMAIN: "${TLS_DOMAIN}"
      FQSU_PORT: "443"
      SECURITY_PROVIDER: "jdbc"
      JDBCSEC_ADMIN_ROLE: "Administrator"
      JDBCSEC_DATASOURCE_DRIVER_CLASSNAME: "org.postgresql.Driver"
      JDBCSEC_DATASOURCE_URL: "jdbc:postgresql://postgres:5432/${DB_JDBCSEC_DATABASE}"
      JDBCSEC_DATASOURCE_USER: "${DB_JDBCSEC_USER}"
      JDBCSEC_DATASOURCE_PASSWORD: "${DB_JDBCSEC_PASSWORD}"
      JDBCSEC_AUTHORITIES_BY_USERNAME_QUERY: >-
        SELECT username, authority
        FROM granted_authorities
        WHERE username = ?
        ORDER BY authority
      JDBCSEC_USERS_BY_USERNAME_QUERY: >-
        SELECT username, password, enabled
        FROM users
        WHERE username = ?
        ORDER BY username
      JDBCSEC_ALL_AUTHORITIES_QUERY: >-
        SELECT authority
        FROM authorities
        ORDER BY authority
      JDBCSEC_ALL_USERNAMES_QUERY: >-
        SELECT username
        FROM users
        ORDER BY username
      JDBCSEC_ALL_USERNAMES_IN_ROLE_QUERY: >-
        SELECT username
        FROM granted_authorities
        WHERE authority = ?
        ORDER BY username
      STORAGE_TYPE: "postgres"
      POSTGRES_HOST: "postgres"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
      POSTGRES_JACKRABBIT_USER: "${DB_JACKRABBIT_USER}"
      POSTGRES_JACKRABBIT_PASSWORD: "${DB_JACKRABBIT_PASSWORD}"
      POSTGRES_JACKRABBIT_DATABASE: "${DB_JACKRABBIT_DATABASE}"
      POSTGRES_HIBERNATE_USER: "${DB_HIBERNATE_USER}"
      POSTGRES_HIBERNATE_PASSWORD: "${DB_HIBERNATE_PASSWORD}"
      POSTGRES_HIBERNATE_DATABASE: "${DB_HIBERNATE_DATABASE}"
      POSTGRES_QUARTZ_USER: "${DB_QUARTZ_USER}"
      POSTGRES_QUARTZ_PASSWORD: "${DB_QUARTZ_PASSWORD}"
      POSTGRES_QUARTZ_DATABASE: "${DB_QUARTZ_DATABASE}"
    depends_on:
      - "postgres"

  postgres:
    image: "docker.io/postgres:15"
    restart: "on-failure:3"
    networks:
      - "biserver"
    ports:
      - "127.0.0.1:5432:5432/tcp"
    volumes:
      - "./postgres.init.d/:/docker-entrypoint-initdb.d/:ro"
      - "postgres-data:/var/lib/postgresql/data/"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
      POSTGRES_JDBCSEC_USER: "${DB_JDBCSEC_USER}"
      POSTGRES_JDBCSEC_PASSWORD: "${DB_JDBCSEC_PASSWORD}"
      POSTGRES_JDBCSEC_DATABASE: "${DB_JDBCSEC_DATABASE}"

networks:

  biserver:
    driver: "bridge"
    internal: false

volumes:

  caddy-data:
  postgres-data:
